{% comment %}
  Creates a user.
  Params:
    - email: string
      the user's email address
    - password: string
      the user's password
    - hook_params: object
      the other params that will be passed to hook_user_create
{% endcomment %}
{% liquid
  function object = 'modules/user/lib/commands/user/create/build', email: email, password: password, hook_params: hook_params
  function object = 'modules/user/lib/commands/user/create/check', object: object

  if object.valid
    graphql user = 'modules/user/user/create', email: email, password: password
    unless user.errors
      function users_count = 'modules/user/lib/queries/user/count'
      if users_count == 1
        assign roles = 'superadmin' | split: ','
        function user_role = 'modules/user/lib/commands/user_roles/create', user_id: user.user.id, roles: roles
      endif
      assign params = '{}' | parse_json | hash_merge: created_user: user.user, hook_params: hook_params
      function results = 'modules/core/lib/commands/hook/fire', hook: 'user_create', params: params, merge_to_object: true
      hash_assign object['hook_results'] = results
    endunless
  endif

  return object
%}
