{% liquid
  function tokenized_names = 'modules/user/commands/profiles/tokenize_names', object: object
  assign uuid_new = '' | uuid
  assign uuid = object.uuid | default: uuid_new
  assign name = object.first_name | append: ' ' | append: object.last_name

  assign data = null | hash_merge: first_name: object.first_name, last_name: object.last_name, user_id: object.user_id, email: object.email, uuid: uuid, name: name, c__names: tokenized_names
  if object.roles == null
    assign roles = '[]' | parse_json
    if context.constants.USER_DEFAULT_ROLE != blank
      assign roles = roles | array_add: context.constants.USER_DEFAULT_ROLE
    endif
  else
    assign roles_type = object.roles | type_of
    if roles_type == 'String'
      assign roles = object.roles | split: ','
    elsif roles_type == 'Array'
      assign roles = object.roles
    else
      # accepts only String and Array
      log object.roles, type: 'ERROR: roles must be an array or a coma separated string'
      assign roles = '[]' | parse_json

      if context.constants.USER_DEFAULT_ROLE != blank
        assign roles = roles | array_add: context.constants.USER_DEFAULT_ROLE
      endif
    endif
  endif

  hash_assign data['roles'] = roles
  return data
%}
